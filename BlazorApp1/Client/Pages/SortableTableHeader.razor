<th scope="col" @onclick="() => OnSort(Column)">
    @ChildContent
    @if (SortColumn == Column && CurrentSortingColumn == Column)
    {
        @if (SortDirection == "ascending")
        {
            <span class="oi oi-arrow-top" style="margin-left: 5px;"></span>
        }
        else
        {
            <span class="oi oi-arrow-bottom" style="margin-left: 5px;"></span>
        }
    }
</th>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Column { get; set; }

    [Parameter]
    public string SortColumn { get; set; }

    [Parameter]
    public string SortDirection { get; set; }

    [Parameter]
    public string CurrentSortingColumn { get; set; } = null;

    [Parameter]
    public EventCallback<string> SortColumnChanged { get; set; }

    [Parameter]
    public EventCallback<string> SortDirectionChanged { get; set; }

    private void OnSort(string column)
    {
        if (SortColumn == column)
        {
            SortDirection = SortDirection == "ascending" ? "descending" : "ascending";
        }
        else
        {
            SortColumn = column;
            SortDirection = "ascending";
        }

        SortColumnChanged.InvokeAsync(SortColumn);
        SortDirectionChanged.InvokeAsync(SortDirection);

        
        if (SortColumn == column)
        {
            CurrentSortingColumn = column;
        }
    }
}
